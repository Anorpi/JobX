<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobxhub.core.dao.RecordDao">

    <resultMap id="recordModel" type="com.jobxhub.core.model.RecordModel" >
        <result column="record_id"          property="recordId"/>
        <result column="agent_id"           property="agentId"/>
        <result column="command"            property="command"/>
        <result column="exec_user"          property="execUser"/>
        <result column="start_time"         property="startTime"/>
        <result column="end_time"           property="endTime"/>
        <result column="exec_type"          property="execType"/>
        <result column="group_id"           property="groupId"/>
        <result column="user_id"            property="userId"/>
        <result column="job_id"             property="jobId"/>
        <result column="job_type"           property="jobType"/>
        <result column="parent_id"          property="parentId"/>
        <result column="pid"                property="pid"/>
        <result column="redo_num"           property="redoNum"/>
        <result column="return_code"        property="returnCode"/>
        <result column="status"             property="status"/>
        <result column="success"            property="success"/>
        <result column="job_name"           property="jobName"/>
        <result column="agent_name"         property="agentName"/>
        <result column="host"               property="host"/>
        <result column="cron_exp"           property="cronExp"/>
        <result column="user_name"          property="operateUname"/>
    </resultMap>

    <sql id="query_Record">
        r.record_id,
        r.agent_id,
        r.command,
        r.exec_user,
        r.start_time,
        r.exec_type,
        r.group_id,
        r.user_id,
        r.job_id,
        r.job_type,
        r.job_name,
        r.parent_id,
        r.pid,
        r.redo_num,
        r.return_code,
        r.status,
        r.success
    </sql>

    <select id="getByPageBean" resultMap="recordModel">
        select <include refid="query_Record"/>,
        case when r.status in (1,3,5,6) then r.end_time when r.status in (0,2,4) then #{pager.filter.currTime} end as end_time,
        a.name as agent_name,
        a.host,
        t.cron_exp,
        u.user_name
        from t_record as r
        inner join t_agent a
        on r.agent_id = a.agent_id
        inner join t_user as u
        on r.user_id = u.user_id
        left join t_job as t
        on r.job_id = t.job_id
        where r.parent_id is null

        <if test="pager.filter.running == true">
            and r.status in (1,3,4,5,6)
        </if>

        <if test="pager.filter.running == false">
            and r.status in (0,2,4)
        </if>

        <if test="pager.filter.record != null">

            <if test="pager.filter.record.success != null">
                and r.success = #{pager.filter.record.success}
            </if>

            <if test="pager.filter.record.agentId != null">
                and r.agent_id = #{pager.filter.record.agentId}
            </if>

            <if test="pager.filter.record.jobId != null">
                and r.job_id = #{pager.filter.record.jobId}
            </if>

            <if test="pager.filter.record.execType != null">
                and r.exec_type = #{pager.filter.record.execType}
            </if>

            <if test="pager.filter.record.jobName != null and pager.filter.record.jobName !='' ">
                and t.job_name like concat('%',#{pager.filter.record.jobName},'%')
            </if>

        </if>

        <if test="pager.filter.record.queryDate !=null " >
            and r.start_time between #{pager.filter.record.queryDate} and date_add(#{pager.filter.record.queryDate}, interval 1 day)
        </if>

        <if test="pager.filter.userId !=null " >
            and r.user_id = #{pager.filter.userId}
        </if>
        order by r.start_time desc
        limit #{pager.offset},#{pager.pageSize}
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(1)
        from t_record as r
        left join t_job as t
        on r.job_id = t.job_id
        where r.parent_id is null
        <if test="filter.running == true " >
            and r.status in (1,3,4,5,6)
        </if>

        <if test="filter.running == false " >
            and r.status in (0,2,4)
        </if>

        <if test="filter.record != null">
            <if test="filter.record.success != null">
                and r.success = #{filter.record.success}
            </if>

            <if test="filter.record.agentId != null">
                and r.agent_id = #{filter.record.agentId}
            </if>

            <if test="filter.record.jobId != null">
                and r.job_id = #{filter.record.jobId}
            </if>

            <if test="filter.record.execType != null">
                and r.exec_type = #{filter.record.execType}
            </if>

            <if test="filter.record.jobName != null and filter.record.jobName !='' ">
                and t.job_name like concat('%',#{filter.record.jobName},'%')
            </if>
        </if>

        <if test="filter.record.queryDate !=null " >
            and r.start_time between #{filter.record.queryDate} and date_add(#{filter.record.queryDate}, interval 1 day)
        </if>

        <if test="filter.userId !=null " >
            and r.user_id = #{filter.userId}
        </if>
    </select>

    <select id="getById" parameterType="java.lang.Long" resultMap="recordModel">
        select <include refid="query_Record"/>,
        r.end_time,
        a.name as agent_name,
        a.host,
        t.cron_exp,
        u.user_name
        from  t_record as r
        inner join t_agent a
        on  r.agent_id = a.agent_id
        inner join t_user as u
        on  r.user_id = u.user_id
        left join t_job as t
        on  r.job_id = t.job_id
        where r.record_id = #{recordId}
    </select>

    <select id="getByPid" parameterType="java.lang.Long" resultMap="recordModel">
        select <include refid="query_Record"/>
        from  t_record as r
        where r.pid = #{pid}
    </select>

    <select id="getReportChart" parameterType="java.util.Map" resultType="com.jobxhub.core.dto.Chart">
        select
            date_format(r.start_time,'%Y-%m-%d') as `date`,
            sum(case r.success when 0 then 1 else 0 end) failed,
            sum(case r.success when 1 then 1 else 0 end) success,
            sum(case r.success when 2 then 1 else 0 end) killed,
            sum(case r.success when 3 then 1 else 0 end) timeout,
            sum(case r.success when 4 then 1 else 0 end) lost,
            sum(case r.job_type when 0 then 1 else 0 end) singleton,
            sum(case r.job_type when 1 then 1 else 0 end) flow,
            sum(case r.exec_type when 0 then 1 else 0 end) auto,
            sum(case r.exec_type when 1 then 1 else 0 end) operator
        from  t_record r
        left join t_job j
        on  r.job_id=j.job_id
        where r.start_time
        between #{filter.start} and #{filter.end}
        <if test="filter.userId!=null" >
            and r.user_id = #{filter.userId}
        </if>
        group by date_format(r.start_time,'%Y-%m-%d')
        order by date_format(r.start_time,'%Y-%m-%d') asc
    </select>

    <select id="getTopChart" parameterType="java.util.Map" resultType="com.jobxhub.core.dto.Chart">
        select
            sum(case r.success when 0 then 1 else 0 end) failed,
            sum(case r.success when 1 then 1 else 0 end) success,
            sum(case r.success when 2 then 1 else 0 end) killed,
            sum(case r.success when 3 then 1 else 0 end) timeout,
            sum(case r.success when 4 then 1 else 0 end) lost,
            sum(case r.job_type when 0 then 1 else 0 end) singleton,
            sum(case r.job_type when 1 then 1 else 0 end) flow,
            sum(case r.exec_type when 0 then 1 else 0 end) auto,
            sum(case r.exec_type when 1 then 1 else 0 end) operator
        from  t_record r
        left join t_job j
        on  r.job_id=j.job_id
        <if test="filter.userId!=null" >
            where r.user_id = #{filter.userId}
        </if>
    </select>

    <select id="getRunningCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(1) from  t_record as r
        where r.job_id = #{jobId}
        and r.status in (0,2,4)
    </select>

    <select id="getRedoList" parameterType="java.lang.Long" resultMap="recordModel">
        select <include refid="query_Record"/>,
        r.end_time,
        a.name as agent_name,
        a.host,
        t.cron_exp,
        u.user_name
        from  t_record as r
        inner join t_agent a
        on  r.agent_id = a.agent_id
        inner join t_user as u
        on  r.user_id = u.user_id
        inner join t_job as t
        on  r.job_id = t.job_id
        where r.parent_id = #{recordId}
        order by r.redo_num asc
    </select>

    <select id="getRecordCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from t_record
        where success=#{filter.success}
        and exec_type=#{filter.execType}
        <if test="filter.userId!=null" >
            and user_id = #{filter.userId}
        </if>
        <if test="filter.status!=null">
            and status in
            <foreach collection="filter.status" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <insert id="save" parameterType="com.jobxhub.core.model.RecordModel" useGeneratedKeys="true" keyProperty="recordId">
        insert into t_record
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="agentId != null" >
                agent_id,
            </if>
            <if test="command != null" >
                command,
            </if>
            <if test="startTime != null" >
                start_time,
            </if>
            <if test="endTime != null" >
                end_time,
            </if>
            <if test="execType != null" >
                exec_type,
            </if>
            <if test="groupId != null" >
                group_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="jobId != null" >
                job_id,
            </if>
            <if test="jobType != null" >
                job_type,
            </if>
            <if test="jobName != null" >
                job_name,
            </if>
            <if test="execUser != null" >
                exec_user,
            </if>
            <if test="parentId != null" >
                parent_id,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="redoNum != null" >
                redo_num,
            </if>
            <if test="returnCode != null" >
                return_code,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="success != null" >
                success
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="agentId != null" >
                #{agentId},
            </if>
            <if test="command != null" >
                #{command},
            </if>
            <if test="startTime != null" >
                #{startTime},
            </if>
            <if test="endTime != null" >
                #{endTime},
            </if>
            <if test="execType != null" >
                #{execType},
            </if>
            <if test="groupId != null" >
                #{groupId},
            </if>
            <if test="userId != null" >
                #{userId},
            </if>
            <if test="jobId != null" >
                #{jobId},
            </if>
            <if test="jobType != null" >
                #{jobType},
            </if>
            <if test="jobName != null" >
                #{jobName},
            </if>
            <if test="execUser != null" >
                #{execUser},
            </if>
            <if test="parentId != null" >
                #{parentId},
            </if>
            <if test="pid != null" >
                #{pid},
            </if>
            <if test="redoNum != null" >
                #{redoNum},
            </if>
            <if test="returnCode != null" >
                #{returnCode},
            </if>
            <if test="status != null" >
                #{status},
            </if>
            <if test="success != null" >
                #{success}
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.jobxhub.core.model.RecordModel">
        update t_record
        set
            end_time        =       #{endTime},
            return_code     =       #{returnCode},
            status          =       #{status},
            success         =       #{success}
        where record_id=#{recordId}
    </update>

    <delete id="delete">
       delete from t_record where start_time between #{start} and #{end}
    </delete>

    <select id="getMessage" resultType="com.jobxhub.core.model.RecordMessageModel">
        select record_id,message
        from t_record_message
        where record_id = #{recordId}
    </select>

    <insert id="saveMessage" parameterType="com.jobxhub.core.model.RecordMessageModel">
        INSERT INTO t_record_message (
            record_id,
            message,
            start_time
        ) SELECT
              #{recordId},
              #{message},
              #{startTime}
        ON DUPLICATE KEY UPDATE message = values(message),start_time=values(start_time)
    </insert>

    <delete id="deleteMessage">
       delete from t_record_message where start_time between #{start} and #{end}
    </delete>

</mapper>