spring:
  application:
    name: jobX
  datasource:
    name: jobx
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/jobx?useUnicode=true&characterEncoding=utf8&useCursorFetch=true&autoReconnect=true&failOverReadOnly=false&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
      username: root
      password: 123322242
      filters: stat,wall,log4j,config
      max-active: 100
      initial-size: 1
      max-wait: 60000
      min-idle: 1
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 50
      max-pool-prepared-statement-per-connection-size: 20
  aop:
    auto: true
    proxy-target-class: true

#dubbo--------------------------------
dubbo:
  application:
    id: jobx-provider
    name: jobx-provider
  scan:
    basePackages: com.jobxhub.core.api
  registry:
    address: zookeeper://127.0.0.1:2181
  protocol:
    id: dubbo
    name: dubbo
    port: 12345
# Enables Dubbo All Endpoints
management:
  endpoint:
    dubbo:
      enabled: true
    dubbo-shutdown.enabled: true
    dubbo-configs.enabled: true
    dubbo-services.enabled: true
#dubbo end --------------------------------

mybatis:
  # 映射文件所在路径
  mapper-locations: classpath:mapper/*.xml
  # pojo类所在包路径
  type-aliases-package: com.jobxhub.core.entity
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 500
    default-statement-timeout: 80

#pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check

jobx:
  #zookepper注册中心
  registry: zookeeper://127.0.0.1:2181
  #agent监控服务端口
  monitorPort: 17502
  ##################################################################################################
  # server端是否集群(多个server)
  # 如果 jobx.cluster为true,则两种缓存实现(redis|memcached)任选其一进行配合(必须选一个)
  # 并且 jobx.cached 要写上对应的缓存实现(redis|memcached)
  # 如果为false,则 redis,memcached,和 jobx.cached 都不用管.
  ##################################################################################################
  cluster: false
  #（可选值: (redis|memcached）
  cached: memcached
  service:
    version: 1.0.0






